apply plugin: 'com.android.library'

android {

    compileSdkVersion 28

    defaultConfig {

        minSdkVersion    21
        targetSdkVersion 28
        versionCode 1
        versionName "0.0.1"

        // Shader compilation directives, put glsl shaders to app/src/main/shaders
        // android studio will pick them up and compile them into APK/assets/shaders
        // KNOWN ISSUE:  if shaders having errors, it takes long time for gradle to timeout
        //               but it will eventually time out and complain about shader compiling
        shaders {
            glslcArgs.addAll(['-c', '-g'])
        }
        externalNativeBuild {
            cmake {
                // armeabi is not supported, not building for mips in samples
                abiFilters 'armeabi-v7a', 'arm64-v8a', "x86", "x86_64"
                arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=c++_static', '-DCMAKE_BUILD_TYPE=Release'
            }
        }
    }
   externalNativeBuild {
        cmake {
            version '3.18.1'
            path 'CMakeLists.txt'
        }
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            //jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

task makeJar(type:Copy) {
    delete 'build/libs/PixVideoSurface.jar'

    from('build/intermediates/runtime_library_classes_jar/release/')
    into('build/libs')
    include('classes.jar')
    rename('classes.jar', 'PixVideoSurface.jar')
}

makeJar.dependsOn(build)
